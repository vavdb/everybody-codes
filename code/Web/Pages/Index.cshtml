@page
@model IndexModel

@functions {
    void RenderCameraRow(IndexModel.CameraRecord row)
    {
        <tr>
            <th>@row.CameraNumber</th>
            <th>@row.Camera</th>
            <th>@row.Latitude</th>
            <th>@row.Longitude</th>
        </tr>
    }
}


<!DOCTYPE html>
<html>

<head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Infi | Security cameras Utrecht</title>
    <!-- Video camera Icon by Martz90 available at http://www.iconarchive.com/show/circle-icons-by-martz90/video-camera-icon.html under a Creative Commons Attribution-Noncommercial-No Derivate 4.0. Full terms at http://creativecommons.org/licenses/by-nc-nd/4.0 -->
    <link rel="icon" type="image/x-icon" href="video-camera-icon.png">
    <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">
    <style type="text/css">
        html,
        body {
            margin: 0;
            padding: 0;
            font-family: 'Roboto', sans-serif;
            font-size: 0.8em;
        }

        a {
            color: #ff6e00;
        }

        #source {
            background: rgba(27, 31, 35, 0.08);
            width: 290px;
            padding: 8px;
            border-radius: 20px;
            margin: 15px auto;
            text-align: center;
        }

        #source a {
            font-weight: bold;
        }

        table td {
            vertical-align: top;
        }

        table thead tr:nth-child(1) th {
            height: 75px;
            background-color: #272727;
            color: #7F7F7C;
            font-size: 3.0em;
        }

        table tr:nth-child(2) th {
            text-align: left;
            height: 25px;
        }

        h1 {
            padding: 20px 0 20px 55px;
            margin: 0 0 0 20px;
            background: url("video-camera-icon.png") no-repeat;
            background-size: 40px;
            background-position: 0 50%;
        }

        #cameraTableContainer {
            margin: 0 0 20px 0;
            width: 100%;
            padding: 0 20px;
            height: 100%;
            vertical-align: top;
        }

        #cameraTableContainer>td {
            width: 25%;
            text-align: center;
        }

        #cameraTableContainer table {
            width: 450px;
            margin: auto;
            height: 100%;
            border-collapse: collapse;
        }

        #cameraTableContainer table tbody tr {
            height: 25px;
            vertical-align: middle;
        }

        #cameraTableContainer table tbody td {
            padding: 5px 0;
        }

        #cameraTableContainer table td:nth-child(1) {
            height: 15px !important;
            margin-right: 15px;
            font-weight: bold;
            border-radius: 20px;
        }

        #cameraTableContainer table tr:last-child td {
            height: 100%;
        }

        #mapid {
            margin: auto;
            height: 500px;
            width: 100%;
        }
    </style>

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
        integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
        crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
        integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
        crossorigin=""></script>
</head>

<body>
    <h1>Security cameras Utrecht</h1>
    <div id="mapid"></div>
    <div id="source">
        source:
        <a href="https://data.overheid.nl/data/dataset/camera-s">https://data.overheid.nl/data/dataset/camera-s</a>
    </div>
    <main>
        <table id="cameraTableContainer">
            <tbody>
                <tr>
                    <td>
                        <table id="column3">
                            <thead>
                                <tr>
                                    <th colspan="4">Cameras 3</th>
                                </tr>
                                <tr>
                                    <th>Number</th>
                                    <th>Name</th>
                                    <th>Latitude</th>
                                    <th>Longitude</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    // For FizzBuzz you'd check here if it wasn't dividable for 5
                                    Model.CameraData.Where(c => c.CameraNumber % 3 == 0)
                                    .ToList().ForEach(r => RenderCameraRow(r));
                                }
                            </tbody>
                        </table>
                    </td>
                    <td>
                        <table id="column5">
                            <thead>
                                <tr>
                                    <th colspan="4">Cameras 5</th>
                                </tr>
                                <tr>
                                    <th>Number</th>
                                    <th>Name</th>
                                    <th>Latitude</th>
                                    <th>Longitude</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    // For FizzBuzz you'd check here if it wasn't dividable for 3
                                    Model.CameraData.Where(c => c.CameraNumber % 5 == 0)
                                    .ToList().ForEach(r => RenderCameraRow(r));
                                }
                            </tbody>
                        </table>
                    </td>
                    <td>
                        <table id="column15">
                            <thead>
                                <tr>
                                    <th colspan="4">Cameras 3 &amp; 5</th>
                                </tr>
                                <tr>
                                    <th>Number</th>
                                    <th>Name</th>
                                    <th>Latitude</th>
                                    <th>Longitude</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    Model.CameraData.Where(c => c.CameraNumber % 3 == 0 && c.CameraNumber % 5 == 0)
            .ToList().ForEach(r => RenderCameraRow(r));
                                }
                            </tbody>
                        </table>
                    </td>
                    <td>
                        <table id="columnOther">
                            <thead>
                                <tr>
                                    <th colspan="4">Cameras Overig</th>
                                </tr>
                                <tr>
                                    <th>Number</th>
                                    <th>Name</th>
                                    <th>Latitude</th>
                                    <th>Longitude</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{

                                    Model.CameraData.Where(c => !(c.CameraNumber % 3 == 0 || c.CameraNumber % 5 == 0))
            .ToList().ForEach(r => RenderCameraRow(r));
                                }
                            </tbody>
                        </table>
                    </td>
                </tr>
            </tbody>
        </table>
    </main>

    <script>
        var cameraData;
        window.onload = function () {
            var mymap = L.map('mapid').setView([52.0914, 5.1115], 13);
            L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
                maxZoom: 18,
                attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, ' +
                    'Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
                id: 'mapbox/streets-v11',
                tileSize: 512,
                zoomOffset: -1
            }).addTo(mymap);

            cameraData = @Html.Raw(Json.Serialize(Model.CameraData))
            cameraData.map(camera => L.marker([camera.latitude, camera.longitude], {title: camera.camera} ).addTo(mymap) )
        };
    </script>
</body>
</html>